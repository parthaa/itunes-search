{"version":3,"sources":["index.js"],"names":["App","_this","Object","_Users_partha_projects_react_itunes_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_partha_projects_react_itunes_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_partha_projects_react_itunes_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","searchSongHandler","evt","searchSong","target","value","song","testURL","jsonp","err","data","console","error","message","setState","songs","results","selectedToPlay","log","selectedSong","renderSongSnippet","state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_audio_player__WEBPACK_IMPORTED_MODULE_9___default","src","previewUrl","autoPlay","controls","name","_this2","map","onClick","bind","trackCensoredName","type","onChange","Component","render","document","getElementById"],"mappings":"0OAMMA,cACJ,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAQFI,kBAAoB,SAACC,GACnBR,EAAKS,WAAWD,EAAIE,OAAOC,QAVfX,EAadS,WAAa,SAACG,GACZ,IAAMC,EAAU,oDAAsDD,EAEtEE,IAAMD,EAAS,KAAM,SAACE,EAAKC,GACrBD,EACFE,QAAQC,MAAMH,EAAII,SAElBnB,EAAKoB,SAAS,CAACC,MAAOL,EAAKM,aApBnBtB,EAyBduB,eAAiB,SAACX,GAChBK,QAAQO,IAAIZ,GACZZ,EAAKoB,SAAS,CAACK,aAAcb,KA3BjBZ,EA8Bd0B,kBAAoB,WAClB,OAAI1B,EAAK2B,MAAMF,cACbR,QAAQO,IAAI,YACZP,QAAQO,IAAIxB,EAAK2B,MAAMF,cACdG,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,IAAKhC,EAAK2B,MAAMF,aAAaQ,WAC7BC,UAAQ,EACRC,UAAQ,MAKdP,EAAAC,EAAAC,cAAA,iCAzCR9B,EAAK2B,MAAQ,CACXN,MAAM,GACNe,KAAM,QACNX,aAAc,MALJzB,wEA8CL,IAAAqC,EAAAlC,KACDkB,EAAQlB,KAAKwB,MAAMN,MAAMiB,IAAI,SAAA1B,GACjC,OAAOgB,EAAAC,EAAAC,cAAA,OAAKS,QAASF,EAAKd,eAAeiB,KAAKH,EAAMzB,IAAQgB,EAAAC,EAAAC,cAAA,WAAMlB,EAAK6B,sBAGzE,OAEEb,EAAAC,EAAAC,cAAA,WACG3B,KAAKuB,oBACNE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOC,SAAUxC,KAAKI,qBAEjCc,UA3DSuB,aAiElBC,iBAAOjB,EAAAC,EAAAC,cAAC/B,EAAD,MAAS+C,SAASC,eAAe","file":"static/js/main.c322ebd5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\nimport jsonp from 'jsonp';\nimport ReactAudioPlayer from 'react-audio-player';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      songs:[],\n      name: 'React',\n      selectedSong: null\n    };\n  }\n\n  searchSongHandler = (evt) => {\n    this.searchSong(evt.target.value);\n  }\n\n  searchSong = (song) => {\n    const testURL = 'https://itunes.apple.com/search?media=music&term=' + song;\n  \n    jsonp(testURL, null, (err, data) => {\n      if (err) {\n        console.error(err.message);\n      } else {\n        this.setState({songs: data.results});\n      }\n    });\n  }\n \n  selectedToPlay = (song) => {\n    console.log(song);\n    this.setState({selectedSong: song});\n  }\n\n  renderSongSnippet = () => {\n    if (this.state.selectedSong) {\n      console.log(\"new song\");\n      console.log(this.state.selectedSong);\n      return ( <div>\n                <ReactAudioPlayer\n                  src={this.state.selectedSong.previewUrl}\n                  autoPlay\n                  controls\n                />\n          </div>\n      );\n    }\n    return (<div> No song to Play </div>);\n  }\n\n  render() {\n    const songs = this.state.songs.map(song => {\n      return <div onClick={this.selectedToPlay.bind(this, song)} ><pre>{song.trackCensoredName}</pre>\n      </div>;\n    });\n    return (\n\n      <div>\n        {this.renderSongSnippet()}\n        <div> \n        <input type=\"text\" onChange={this.searchSongHandler} />\n        </div>\n        {songs}\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}